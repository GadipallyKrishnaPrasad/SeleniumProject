<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-02T05:14:38 IST" name="Suite" finished-at="2023-11-02T05:15:36 IST" duration-ms="58141">
    <groups>
    </groups>
    <test started-at="2023-11-02T05:14:38 IST" name="Test2" finished-at="2023-11-02T05:15:29 IST" duration-ms="50315">
      <class name="TestClasses.SecondTest">
        <test-method signature="testNumberTwo()[pri:0, instance:TestClasses.SecondTest@1f3f02ee]" started-at="2023-11-02T05:14:38 IST" name="testNumberTwo" finished-at="2023-11-02T05:15:26 IST" duration-ms="47754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumberTwo -->
        <test-method is-config="true" signature="closure()[pri:0, instance:TestClasses.SecondTest@1f3f02ee]" started-at="2023-11-02T05:15:26 IST" name="closure" finished-at="2023-11-02T05:15:29 IST" duration-ms="2406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- TestClasses.SecondTest -->
    </test> <!-- Test2 -->
    <test started-at="2023-11-02T05:14:38 IST" name="Test1" finished-at="2023-11-02T05:15:35 IST" duration-ms="57110">
      <class name="TestClasses.LoginTest">
        <test-method signature="testLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.LoginTest@49ff7d8c]" started-at="2023-11-02T05:14:40 IST" name="testLogin" data-provider="provideData" finished-at="2023-11-02T05:14:53 IST" duration-ms="12927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gkrishnaprasaddev@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[javacarrier@321]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="closure()[pri:0, instance:TestClasses.LoginTest@49ff7d8c]" started-at="2023-11-02T05:14:53 IST" name="closure" finished-at="2023-11-02T05:14:54 IST" duration-ms="1004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method signature="testLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.LoginTest@49ff7d8c]" started-at="2023-11-02T05:14:54 IST" name="testLogin" data-provider="provideData" finished-at="2023-11-02T05:15:15 IST" duration-ms="21598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[phaniatw33@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[atw@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="closure()[pri:0, instance:TestClasses.LoginTest@49ff7d8c]" started-at="2023-11-02T05:15:15 IST" name="closure" finished-at="2023-11-02T05:15:21 IST" duration-ms="5807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method signature="testLogin(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:TestClasses.LoginTest@49ff7d8c]" started-at="2023-11-02T05:15:21 IST" name="testLogin" data-provider="provideData" finished-at="2023-11-02T05:15:35 IST" duration-ms="13573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[krishnaprasad.gadipally@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Krishnaprasadjava@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Fail]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="closure()[pri:0, instance:TestClasses.LoginTest@49ff7d8c]" started-at="2023-11-02T05:15:35 IST" name="closure" finished-at="2023-11-02T05:15:35 IST" duration-ms="696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- TestClasses.LoginTest -->
    </test> <!-- Test1 -->
    <test started-at="2023-11-02T05:14:38 IST" name="Test3" finished-at="2023-11-02T05:15:36 IST" duration-ms="58141">
      <class name="TestClasses.ThirdTest">
        <test-method signature="testNumberThree()[pri:0, instance:TestClasses.ThirdTest@7b94089b]" started-at="2023-11-02T05:14:38 IST" name="testNumberThree" finished-at="2023-11-02T05:15:21 IST" duration-ms="42586" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at TestClasses.ThirdTest.testNumberThree(ThirdTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumberThree -->
        <test-method is-config="true" signature="closure()[pri:0, instance:TestClasses.ThirdTest@7b94089b]" started-at="2023-11-02T05:15:36 IST" name="closure" finished-at="2023-11-02T05:15:36 IST" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- TestClasses.ThirdTest -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
